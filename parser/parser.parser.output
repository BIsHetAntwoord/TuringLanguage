Terminals unused in grammar

   "-"
   "*"
   "/"
   "%"
   "&"
   "|"
   "^"
   "~"
   ".."
   "string"
   "error token"
   UPLUS
   UMIN
   TRY


Grammar

    0 $accept: root $end

    1 root: global_decl_list

    2 global_decl_list: global_decl_list function
    3                 | %empty

    4 function: rettype "identifier" "(" arg_list ")" "{" statement_list "}"

    5 arg_list: %empty

    6 statement_list: statement_list statement
    7               | %empty

    8 statement: ";"
    9          | expression ";"

   10 expression: lvalue
   11           | calc_expression

   12 calc_expression: rvalue
   13                | expression "=" expression
   14                | expression "+" expression
   15                | "(" calc_expression ")"

   16 lvalue: "identifier"
   17       | "(" lvalue ")"
   18       | datatype "identifier"

   19 rvalue: constant

   20 constant: "integer"
   21         | "true"
   22         | "false"

   23 datatype: "u32"
   24         | "bool"

   25 rettype: datatype
   26        | "void"


Terminals, with rules where they appear

$end (0) 0
error (256)
"bool" (258) 24
"false" (259) 22
"true" (260) 21
"u32" (261) 23
"void" (262) 26
";" (263) 8 9
"=" (264) 13
"+" (265) 14
"-" (266)
"*" (267)
"/" (268)
"%" (269)
"&" (270)
"|" (271)
"^" (272)
"~" (273)
".." (274)
"(" (275) 4 15 17
")" (276) 4 15 17
"{" (277) 4
"}" (278) 4
"integer" <integer> (279) 20
"identifier" <str> (280) 4 16 18
"string" <str> (281)
"error token" (282)
UPLUS (283)
UMIN (284)
TRY (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
root (32)
    on left: 1, on right: 0
global_decl_list <node> (33)
    on left: 2 3, on right: 1 2
function <node> (34)
    on left: 4, on right: 2
arg_list <node> (35)
    on left: 5, on right: 4
statement_list <node> (36)
    on left: 6 7, on right: 4 6
statement <node> (37)
    on left: 8 9, on right: 6
expression <node> (38)
    on left: 10 11, on right: 9 13 14
calc_expression <node> (39)
    on left: 12 13 14 15, on right: 11 15
lvalue <node> (40)
    on left: 16 17 18, on right: 10 17
rvalue <node> (41)
    on left: 19, on right: 12
constant <node> (42)
    on left: 20 21 22, on right: 19
datatype <type> (43)
    on left: 23 24, on right: 18 25
rettype <type> (44)
    on left: 25 26, on right: 4


State 0

    0 $accept: . root $end

    $default  reduce using rule 3 (global_decl_list)

    root              go to state 1
    global_decl_list  go to state 2


State 1

    0 $accept: root . $end

    $end  shift, and go to state 3


State 2

    1 root: global_decl_list .
    2 global_decl_list: global_decl_list . function

    "bool"  shift, and go to state 4
    "u32"   shift, and go to state 5
    "void"  shift, and go to state 6

    $default  reduce using rule 1 (root)

    function  go to state 7
    datatype  go to state 8
    rettype   go to state 9


State 3

    0 $accept: root $end .

    $default  accept


State 4

   24 datatype: "bool" .

    $default  reduce using rule 24 (datatype)


State 5

   23 datatype: "u32" .

    $default  reduce using rule 23 (datatype)


State 6

   26 rettype: "void" .

    $default  reduce using rule 26 (rettype)


State 7

    2 global_decl_list: global_decl_list function .

    $default  reduce using rule 2 (global_decl_list)


State 8

   25 rettype: datatype .

    $default  reduce using rule 25 (rettype)


State 9

    4 function: rettype . "identifier" "(" arg_list ")" "{" statement_list "}"

    "identifier"  shift, and go to state 10


State 10

    4 function: rettype "identifier" . "(" arg_list ")" "{" statement_list "}"

    "("  shift, and go to state 11


State 11

    4 function: rettype "identifier" "(" . arg_list ")" "{" statement_list "}"

    $default  reduce using rule 5 (arg_list)

    arg_list  go to state 12


State 12

    4 function: rettype "identifier" "(" arg_list . ")" "{" statement_list "}"

    ")"  shift, and go to state 13


State 13

    4 function: rettype "identifier" "(" arg_list ")" . "{" statement_list "}"

    "{"  shift, and go to state 14


State 14

    4 function: rettype "identifier" "(" arg_list ")" "{" . statement_list "}"

    $default  reduce using rule 7 (statement_list)

    statement_list  go to state 15


State 15

    4 function: rettype "identifier" "(" arg_list ")" "{" statement_list . "}"
    6 statement_list: statement_list . statement

    "bool"        shift, and go to state 4
    "false"       shift, and go to state 16
    "true"        shift, and go to state 17
    "u32"         shift, and go to state 5
    ";"           shift, and go to state 18
    "("           shift, and go to state 19
    "}"           shift, and go to state 20
    "integer"     shift, and go to state 21
    "identifier"  shift, and go to state 22

    statement        go to state 23
    expression       go to state 24
    calc_expression  go to state 25
    lvalue           go to state 26
    rvalue           go to state 27
    constant         go to state 28
    datatype         go to state 29


State 16

   22 constant: "false" .

    $default  reduce using rule 22 (constant)


State 17

   21 constant: "true" .

    $default  reduce using rule 21 (constant)


State 18

    8 statement: ";" .

    $default  reduce using rule 8 (statement)


State 19

   15 calc_expression: "(" . calc_expression ")"
   17 lvalue: "(" . lvalue ")"

    "bool"        shift, and go to state 4
    "false"       shift, and go to state 16
    "true"        shift, and go to state 17
    "u32"         shift, and go to state 5
    "("           shift, and go to state 19
    "integer"     shift, and go to state 21
    "identifier"  shift, and go to state 22

    expression       go to state 30
    calc_expression  go to state 31
    lvalue           go to state 32
    rvalue           go to state 27
    constant         go to state 28
    datatype         go to state 29


State 20

    4 function: rettype "identifier" "(" arg_list ")" "{" statement_list "}" .

    $default  reduce using rule 4 (function)


State 21

   20 constant: "integer" .

    $default  reduce using rule 20 (constant)


State 22

   16 lvalue: "identifier" .

    $default  reduce using rule 16 (lvalue)


State 23

    6 statement_list: statement_list statement .

    $default  reduce using rule 6 (statement_list)


State 24

    9 statement: expression . ";"
   13 calc_expression: expression . "=" expression
   14                | expression . "+" expression

    ";"  shift, and go to state 33
    "="  shift, and go to state 34
    "+"  shift, and go to state 35


State 25

   11 expression: calc_expression .

    $default  reduce using rule 11 (expression)


State 26

   10 expression: lvalue .

    $default  reduce using rule 10 (expression)


State 27

   12 calc_expression: rvalue .

    $default  reduce using rule 12 (calc_expression)


State 28

   19 rvalue: constant .

    $default  reduce using rule 19 (rvalue)


State 29

   18 lvalue: datatype . "identifier"

    "identifier"  shift, and go to state 36


State 30

   13 calc_expression: expression . "=" expression
   14                | expression . "+" expression

    "="  shift, and go to state 34
    "+"  shift, and go to state 35


State 31

   11 expression: calc_expression .
   15 calc_expression: "(" calc_expression . ")"

    ")"  shift, and go to state 37

    $default  reduce using rule 11 (expression)


State 32

   10 expression: lvalue .
   17 lvalue: "(" lvalue . ")"

    ")"  shift, and go to state 38

    $default  reduce using rule 10 (expression)


State 33

    9 statement: expression ";" .

    $default  reduce using rule 9 (statement)


State 34

   13 calc_expression: expression "=" . expression

    "bool"        shift, and go to state 4
    "false"       shift, and go to state 16
    "true"        shift, and go to state 17
    "u32"         shift, and go to state 5
    "("           shift, and go to state 19
    "integer"     shift, and go to state 21
    "identifier"  shift, and go to state 22

    expression       go to state 39
    calc_expression  go to state 25
    lvalue           go to state 26
    rvalue           go to state 27
    constant         go to state 28
    datatype         go to state 29


State 35

   14 calc_expression: expression "+" . expression

    "bool"        shift, and go to state 4
    "false"       shift, and go to state 16
    "true"        shift, and go to state 17
    "u32"         shift, and go to state 5
    "("           shift, and go to state 19
    "integer"     shift, and go to state 21
    "identifier"  shift, and go to state 22

    expression       go to state 40
    calc_expression  go to state 25
    lvalue           go to state 26
    rvalue           go to state 27
    constant         go to state 28
    datatype         go to state 29


State 36

   18 lvalue: datatype "identifier" .

    $default  reduce using rule 18 (lvalue)


State 37

   15 calc_expression: "(" calc_expression ")" .

    $default  reduce using rule 15 (calc_expression)


State 38

   17 lvalue: "(" lvalue ")" .

    $default  reduce using rule 17 (lvalue)


State 39

   13 calc_expression: expression . "=" expression
   13                | expression "=" expression .
   14                | expression . "+" expression

    "="  shift, and go to state 34
    "+"  shift, and go to state 35

    $default  reduce using rule 13 (calc_expression)


State 40

   13 calc_expression: expression . "=" expression
   14                | expression . "+" expression
   14                | expression "+" expression .

    $default  reduce using rule 14 (calc_expression)
